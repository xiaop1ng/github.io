(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{298:function(n,s,a){"use strict";a.r(s);var t=a(4),r=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"springboot-开箱使用-一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot-开箱使用-一"}},[n._v("#")]),n._v(" SpringBoot 开箱使用 (一)")]),n._v(" "),a("p",[n._v("Spring Boot 是一个崭新的令人兴奋的项目，它以 Spring 的视角，致力于简化 Spring 本身。")]),n._v(" "),a("h2",{attrs:{id:"spring-boot-是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-是什么？"}},[n._v("#")]),n._v(" Spring Boot 是什么？")]),n._v(" "),a("p",[n._v("Spring Boot 的目的是提供一组工具，以便快速构建容易配置的 Spring 应用程序。\nSpring Boot 支持约定而非配置，旨在让您尽快启动并运行。\n我所理解的 Spring Boot 是 Sping 家族的一个大合集，可以让我们更容易的构建 Spring 程序（更少的 XML 配置）")]),n._v(" "),a("p",[a("a",{attrs:{href:"http://projects.spring.io/spring-boot",target:"_blank",rel:"noopener noreferrer"}},[n._v("Spring 官网"),a("OutboundLink")],1),n._v(" 这样介绍 SpringBoot")]),n._v(" "),a("blockquote",[a("p",[n._v("Takes an opinionated view of building production-ready Spring applications. Spring Boot favors convention over configuration and is designed to get you up and running as quickly as possible.")])]),n._v(" "),a("p",[n._v("这一切听起来很不错，对吧？")]),n._v(" "),a("blockquote",[a("p",[n._v("Spring Boot 是一个崭新的令人兴奋的项目，它以 Spring 的视角，致力于简化 Spring 本身。")])]),n._v(" "),a("h2",{attrs:{id:"首先，它很有主见"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首先，它很有主见"}},[n._v("#")]),n._v(" 首先，它很有主见")]),n._v(" "),a("p",[n._v("Spring Boot 拥有观点。换句话说，Spring Boot 拥有合理的默认值，所以您可以使用这些常用值快速构建应用程序。")]),n._v(" "),a("p",[n._v("例如，Tomcat 是一个非常流行的 Web 容器。默认情况下，Spring Boot Web 应用程序使用了一个嵌入式 Tomcat 容器。")]),n._v(" "),a("h2",{attrs:{id:"其次，它可以自定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其次，它可以自定义"}},[n._v("#")]),n._v(" 其次，它可以自定义")]),n._v(" "),a("p",[n._v("如果无法改变其想法，具有主见的框架就不是很好的框架。您可以根据自己的喜好轻松地自定义 Spring Boot 应用程序，无论是在进行初始配置时还是在开发周期的后期阶段。")]),n._v(" "),a("p",[n._v("例如，如果喜欢 Maven，可以轻松地在 POM 文件中更改 "),a("dependency",[n._v(" 来替换 Spring Boot 默认值。")])],1),n._v(" "),a("h2",{attrs:{id:"quick-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quick-start"}},[n._v("#")]),n._v(" Quick Start")]),n._v(" "),a("p",[n._v("这里还是使用我们熟知的 Maven 来构建项目，还不清楚 Maven 的使用可以先学习一下 "),a("a",{attrs:{href:"https://blog.csdn.net/xiaoping0915/article/details/60780058",target:"_blank",rel:"noopener noreferrer"}},[n._v("Maven的使用"),a("OutboundLink")],1),n._v("\nStep 1：在新建项目的 pom 文件中添加")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.0.1.RELEASE</version>\n</parent>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n</dependencies>\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("p",[n._v("Step 2: 在我们的项目下创建一个 Java 文件 Example.java")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * `@EnableAutoConfiguration`\n * 这个注解告诉Spring Boot根据添加的jar依赖猜测你想如何配置Spring。\n * 由于spring-boot-starter-web添加了Tomcat和Spring MVC，所以auto-configuration将假定你正在开发一个web应用，并对Spring进行相应地设置。\n * \n */\n@Controller\n@EnableAutoConfiguration\npublic class Example {\n\n    @RequestMapping("/")\n    @ResponseBody\n    String home() {\n        return "SpringBoot is run";\n    }\n    \n    public static void main(String[] args) throws Exception {\n    \t// SpringApplication 将引导我们的应用，启动 Spring，相应地启动被自动配置的 Tomcat web 服务器。\n// 我们需要将 Example.class 作为参数传递给 run 方法，以此告诉 SpringApplication 谁是主要的 Spring 组件，并传递 args 数组以暴露所有的命令行参数。    \n        SpringApplication.run(Example.class, args);\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br")])]),a("p",[n._v("这时程序可以启动了。你应该会看到：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v2.0.1.RELEASE)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br")])]),a("p",[n._v("使用浏览器访问 127.0.0.1:8080 ,我们应该会看到")]),n._v(" "),a("blockquote",[a("p",[n._v("SpringBoot is run")])]),n._v(" "),a("h2",{attrs:{id:"开发者工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发者工具"}},[n._v("#")]),n._v(" 开发者工具")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-devtools</artifactId>\n    <optional>true</optional>\n</dependency>\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("h2",{attrs:{id:"自动重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动重启"}},[n._v("#")]),n._v(" 自动重启")]),n._v(" "),a("p",[n._v("如果应用使用 spring-boot-devtools ，则只要 classpath 下的文件有变动，它就会自动重启。这在使用 IDE 时非常有用，因为可以很快得到代码改变的反馈。默认情况下，classpath 下任何指向文件夹的实体都会被监控")])])}),[],!1,null,null,null);s.default=r.exports}}]);